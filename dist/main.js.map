{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/algorithms/polytreenode.js","webpack:///./src/board.js","webpack:///./src/index.js","webpack:///./src/tile.js"],"names":["PolyTreeNode","value","position","grid","tileObj","document","getElementById","parent","children","target","queue","length","currentNode","shift","classList","add","console","log","push","i","dfs","increments","neighbors","forEach","inc","newPos","neighbor","node","includes","addParent","parentNode","removeChild","Board","row","j","newTile","Tile","addEventListener","board","fillGrid","rootNode","tile","targetNode","algorithm","setAlgo","event","id","runAlgorithm","buildTree","bfs","dijkstrasButton","astarButton","bfsButton","dfsButton","visButton","createElement","appendChild"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IClFqBA,Y;AAEjB,wBAAYC,KAAZ,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AAAA;;AAC/B,SAAKC,OAAL,GAAeC,QAAQ,CAACC,cAAT,WAA2BJ,QAAQ,CAAC,CAAD,CAAnC,cAA0CA,QAAQ,CAAC,CAAD,CAAlD,EAAf;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKK,MAAL,GAAc,IAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKL,IAAL,GAAYA,IAAZ;AACH;;;;wBAEGM,M,EAAQ;AACR,UAAIC,KAAK,GAAG,CAAC,IAAD,CAAZ;;AAEA,aAAOA,KAAK,CAACC,MAAN,GAAe,CAAtB,EAAyB;AAErB,YAAIC,WAAW,GAAGF,KAAK,CAACG,KAAN,EAAlB;;AAEA,YAAID,WAAW,CAACX,KAAZ,KAAsB,MAAtB,IAAgCW,WAAW,CAACX,KAAZ,KAAsB,QAA1D,EAAoE;AAChEW,qBAAW,CAACR,OAAZ,CAAoBU,SAApB,CAA8BC,GAA9B,CAAkC,SAAlC;AACH;;AAED,YAAIH,WAAW,CAACX,KAAZ,KAAsBQ,MAA1B,EAAkC;AAC9BG,qBAAW,CAACR,OAAZ,CAAoBU,SAApB,CAA8BC,GAA9B,CAAkC,cAAlC;AACAC,iBAAO,CAACC,GAAR,CAAYL,WAAZ;AACA,iBAAOA,WAAP;AACH;;AAEDF,aAAK,CAACQ,IAAN,OAAAR,KAAK,qBAASE,WAAW,CAACJ,QAArB,EAAL;AACH;AAEJ;;;wBAEGC,M,EAAQ;AAER,UAAI,KAAKR,KAAL,KAAeQ,MAAnB,EAA2B;AACvB,aAAKL,OAAL,CAAaU,SAAb,CAAuBC,GAAvB,CAA2B,cAA3B;AACAC,eAAO,CAACC,GAAR,CAAY,IAAZ;AACA,eAAO,IAAP;AACH;;AAED,UAAI,KAAKhB,KAAL,KAAe,MAAf,IAAyB,KAAKA,KAAL,KAAe,QAA5C,EAAsD;AAClD,aAAKG,OAAL,CAAaU,SAAb,CAAuBC,GAAvB,CAA2B,SAA3B;AACH;;AAED,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKX,QAAL,CAAcG,MAAlC,EAA0CQ,CAAC,EAA3C,EAA+C;AAC3C,eAAO,KAAKX,QAAL,CAAcW,CAAd,EAAiBC,GAAjB,CAAqBX,MAArB,CAAP;AACH;AAEJ;;;gCAEW;AAAA;;AACR,UAAMY,UAAU,GAAG,CACf,CAAC,CAAD,EAAI,CAAJ,CADe,EAEf,CAAC,CAAC,CAAF,EAAK,CAAL,CAFe,EAGf,CAAC,CAAD,EAAI,CAAJ,CAHe,EAIf,CAAC,CAAD,EAAI,CAAC,CAAL,CAJe,CAAnB,CADQ,CAQR;;AACA,UAAIC,SAAS,GAAG,CAAC,IAAD,CAAhB;;AATQ;AAYJ,YAAIV,WAAW,GAAGU,SAAS,CAACT,KAAV,EAAlB;AAEAQ,kBAAU,CAACE,OAAX,CAAmB,UAAAC,GAAG,EAAI;AACtB,cAAIC,MAAM,GAAG,CAACb,WAAW,CAACV,QAAZ,CAAqB,CAArB,IAA0BsB,GAAG,CAAC,CAAD,CAA9B,EAAmCZ,WAAW,CAACV,QAAZ,CAAqB,CAArB,IAA0BsB,GAAG,CAAC,CAAD,CAAhE,CAAb,CADsB,CAGtB;;AACA,cAAIC,MAAM,CAAC,CAAD,CAAN,IAAa,CAAb,IAAkBA,MAAM,CAAC,CAAD,CAAN,GAAY,EAA9B,IAAoCA,MAAM,CAAC,CAAD,CAAN,IAAa,CAAjD,IAAsDA,MAAM,CAAC,CAAD,CAAN,GAAY,EAAtE,EAA0E;AACtE,gBAAIC,QAAQ,GAAG,KAAI,CAACvB,IAAL,CAAUsB,MAAM,CAAC,CAAD,CAAhB,EAAqBA,MAAM,CAAC,CAAD,CAA3B,CAAf,CADsE,CAGtE;;AACA,gBAAIC,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACC,IAAT,CAAcpB,MAAd,KAAyB,IAA1C,IAAkD,CAACK,WAAW,CAACJ,QAAZ,CAAqBoB,QAArB,CAA8BF,QAAQ,CAACC,IAAvC,CAAvD,EAAqG;AACjGL,uBAAS,CAACJ,IAAV,CAAeQ,QAAQ,CAACC,IAAxB;AACAD,sBAAQ,CAACC,IAAT,CAAcE,SAAd,CAAwBjB,WAAxB;AACH;AACJ;AAEJ,SAdD;AAdI;;AAWR,aAAOU,SAAS,CAACX,MAAV,GAAmB,CAA1B,EAA6B;AAAA;AAmB5B;AAEJ;;;8BAESmB,U,EAAY;AAElB,UAAI,KAAKvB,MAAL,KAAgB,IAApB,EAA0B;AAAE;AACxB,aAAKA,MAAL,CAAYwB,WAAZ,CAAwB,IAAxB,EADsB,CACQ;AACjC;;AAED,UAAID,UAAU,KAAK,IAAnB,EAAyB;AACrB,aAAKvB,MAAL,GAAcuB,UAAd;AACA,aAAKvB,MAAL,CAAYC,QAAZ,CAAqBU,IAArB,CAA0B,IAA1B;AACH,OATiB,CAWlB;AAEA;AACA;AACA;;AACH,K,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GJ;;IAEqBc,K;AAEjB,mBAAc;AAAA;;AACV,SAAK7B,IAAL,GAAY,EAAZ;AACAa,WAAO,CAACC,GAAR,CAAY,eAAZ;AACH;;;;+BAEU;AAEP,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAAE;AAC3B,YAAIc,GAAG,GAAG,EAAV;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,cAAIC,OAAO,GAAG,IAAIC,6CAAJ,CAAS,CAACjB,CAAD,EAAIe,CAAJ,CAAT,EAAiB,IAAjB,CAAd;AACAD,aAAG,CAACf,IAAJ,CAASiB,OAAT;AACH;;AAED,aAAKhC,IAAL,CAAUe,IAAV,CAAee,GAAf;AACH;AAEJ;;;8BAES,CAET;;;gCAEW,CAEX;;;;;;;;;;;;;;;;;;AC9BL;AAAA;AAAA;AAAA;AACA;AAEA5B,QAAQ,CAACgC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAEhD;AACA,MAAIC,KAAK,GAAG,IAAIN,8CAAJ,EAAZ;AACAM,OAAK,CAACC,QAAN;AACAvB,SAAO,CAACC,GAAR,CAAY,iCAAZ,EALgD,CAOhD;;AACAqB,OAAK,CAACnC,IAAN,CAAW,EAAX,EAAe,CAAf,EAAkBwB,IAAlB,GAAyB,IAAI3B,gEAAJ,CAAiB,MAAjB,EAAyB,CAAC,EAAD,EAAK,CAAL,CAAzB,EAAkCsC,KAAK,CAACnC,IAAxC,CAAzB;AACA,MAAIqC,QAAQ,GAAGF,KAAK,CAACnC,IAAN,CAAW,EAAX,EAAe,CAAf,CAAf;AACAqC,UAAQ,CAACC,IAAT,CAAc3B,SAAd,CAAwBC,GAAxB,CAA4B,WAA5B;AACAC,SAAO,CAACC,GAAR,CAAY,eAAZ,EAXgD,CAahD;;AACAqB,OAAK,CAACnC,IAAN,CAAW,EAAX,EAAe,EAAf,EAAmBwB,IAAnB,GAA0B,IAAI3B,gEAAJ,CAAiB,QAAjB,EAA2B,CAAC,EAAD,EAAK,EAAL,CAA3B,EAAqCsC,KAAK,CAACnC,IAA3C,CAA1B;AACA,MAAIuC,UAAU,GAAGJ,KAAK,CAACnC,IAAN,CAAW,EAAX,EAAe,EAAf,CAAjB;AACAuC,YAAU,CAACD,IAAX,CAAgB3B,SAAhB,CAA0BC,GAA1B,CAA8B,aAA9B;AACAC,SAAO,CAACC,GAAR,CAAY,iBAAZ,EAjBgD,CAmBhD;;AACA,MAAI0B,SAAS,GAAG,SAAhB,CApBgD,CAoBrB;;AAE3B,WAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpBF,aAAS,GAAGE,KAAK,CAACpC,MAAN,CAAaqC,EAAzB;AACH;;AAED,WAASC,YAAT,GAAwB;AACpB,YAAQJ,SAAR;AACI,WAAK,SAAL;AACIH,gBAAQ,CAACb,IAAT,CAAcqB,SAAd;AACAhC,eAAO,CAACC,GAAR,CAAY,iBAAZ;AACAuB,gBAAQ,CAACb,IAAT,CAAcsB,GAAd,CAAkB,QAAlB;AACAjC,eAAO,CAACC,GAAR,CAAY,oBAAZ;AACA;;AACJ,WAAK,SAAL;AACIuB,gBAAQ,CAACb,IAAT,CAAcqB,SAAd;AACAhC,eAAO,CAACC,GAAR,CAAY,iBAAZ;AACAuB,gBAAQ,CAACb,IAAT,CAAcP,GAAd,CAAkB,QAAlB;AACAJ,eAAO,CAACC,GAAR,CAAY,oBAAZ;;AACJ;AACI;AAbR;AAeH;;AAED,MAAIiC,eAAe,GAAG7C,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAtB;AACA,MAAI6C,WAAW,GAAG9C,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;AACA,MAAI8C,SAAS,GAAG/C,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AACA,MAAI+C,SAAS,GAAGhD,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AAEA4C,iBAAe,CAACb,gBAAhB,CAAiC,OAAjC,EAA0CO,OAA1C;AACAO,aAAW,CAACd,gBAAZ,CAA6B,OAA7B,EAAsCO,OAAtC;AACAQ,WAAS,CAACf,gBAAV,CAA2B,OAA3B,EAAoCO,OAApC;AACAS,WAAS,CAAChB,gBAAV,CAA2B,OAA3B,EAAoCO,OAApC;AAEA,MAAIU,SAAS,GAAGjD,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAhB;AACAgD,WAAS,CAACjB,gBAAV,CAA2B,OAA3B,EAAoCU,YAApC;AAEH,CAzDD,E;;;;;;;;;;;;;;;;;;;;;ACHA;;IAEqBX,I;AAEjB,gBAAYlC,QAAZ,EAAsBoC,KAAtB,EAA6B;AAAA;;AACzB,SAAKpC,QAAL,GAAgBA,QAAhB,CADyB,CAEzB;;AAEA,SAAKuC,IAAL,GAAYpC,QAAQ,CAACkD,aAAT,CAAuB,KAAvB,CAAZ;AACA,SAAKd,IAAL,CAAU3B,SAAV,CAAoBC,GAApB,CAAwB,MAAxB;AACA,SAAK0B,IAAL,CAAUK,EAAV,aAAkB5C,QAAQ,CAAC,CAAD,CAA1B,cAAiCA,QAAQ,CAAC,CAAD,CAAzC;AAGA,QAAIC,IAAI,GAAGE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX;AACAH,QAAI,CAACqD,WAAL,CAAiB,KAAKf,IAAtB;AAEA,SAAKd,IAAL,GAAY,IAAI3B,gEAAJ,CAAiB,IAAjB,EAAuBE,QAAvB,EAAiCoC,KAAK,CAACnC,IAAvC,CAAZ;AACH;;;;4BAEO;AACJ,WAAKsC,IAAL,CAAU3B,SAAV,CAAoBC,GAApB,CAAwB,SAAxB;AACH;;;gCAEW;AACR,WAAK0B,IAAL,CAAU3B,SAAV,CAAoBC,GAApB,CAAwB,cAAxB;AACH","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default class PolyTreeNode {\n\n    constructor(value, position, grid) {\n        this.tileObj = document.getElementById(`${position[0]}-${position[1]}`);\n        this.value = value;\n        this.position = position;\n        this.parent = null;\n        this.children = [];\n        this.grid = grid;\n    }\n\n    bfs(target) {\n        let queue = [this];\n\n        while (queue.length > 0) {\n\n            let currentNode = queue.shift();\n\n            if (currentNode.value !== \"root\" && currentNode.value !== \"target\") {\n                currentNode.tileObj.classList.add(\"visited\");\n            }\n\n            if (currentNode.value === target) {\n                currentNode.tileObj.classList.add(\"target-found\");\n                console.log(currentNode);\n                return currentNode;\n            }\n            \n            queue.push(...currentNode.children);\n        }\n        \n    }\n\n    dfs(target) {\n\n        if (this.value === target) {\n            this.tileObj.classList.add(\"target-found\");\n            console.log(this);\n            return this;\n        }\n\n        if (this.value !== \"root\" && this.value !== \"target\") {\n            this.tileObj.classList.add(\"visited\");\n        }\n\n        for (let i = 0; i < this.children.length; i++) {\n            return this.children[i].dfs(target)\n        }\n\n    }\n\n    buildTree() {\n        const increments = [\n            [1, 0],\n            [-1, 0],\n            [0, 1],\n            [0, -1]\n        ];\n\n        // buildTree function will use the node on which it is called as the root node of the tree.\n        let neighbors = [this];\n\n        while (neighbors.length > 0) {\n            let currentNode = neighbors.shift();\n            \n            increments.forEach(inc => {\n                let newPos = [currentNode.position[0] + inc[0], currentNode.position[1] + inc[1]]\n\n                // If the position is valid:\n                if (newPos[0] >= 0 && newPos[0] < 24 && newPos[1] >= 0 && newPos[1] < 48) {\n                    let neighbor = this.grid[newPos[0]][newPos[1]];\n\n                    // If the neighbor exists and is not the parent or child of the current node: // edit this later\n                    if (neighbor.node && neighbor.node.parent === null && !currentNode.children.includes(neighbor.node)) {\n                        neighbors.push(neighbor.node);\n                        neighbor.node.addParent(currentNode);\n                    }\n                }\n\n            })\n\n        }\n\n    }\n\n    addParent(parentNode) {\n\n        if (this.parent !== null) { // Check to see if current node already has a parent\n            this.parent.removeChild(this) // Remove itself from old parent's children\n        }\n\n        if (parentNode !== null) {\n            this.parent = parentNode;\n            this.parent.children.push(this);\n        }\n\n        // this.parent = parentNode;\n\n        // if (this.parent) { // Check in case node passed in is null\n        //     this.parent.children.push(this);\n        // }\n    }\n\n    // addChild(childNode) {\n    //     childNode.addParent(this);\n    // }\n\n    // removeChild(childNode) {\n    //     let index = this.children.indexOf(childNode);\n    //     this.children.splice(index, 1);\n    //     childNode.parent = null;\n    // }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    ","import Tile from \"./tile\";\n\nexport default class Board { \n\n    constructor() {\n        this.grid = [];\n        console.log(\"Board created\")\n    }\n\n    fillGrid() { \n        \n        for (let i = 0; i < 24; i++) { // Board is 24 x 48, 1152 total tiles\n            let row = [];\n\n            for (let j = 0; j < 48; j++) {\n                let newTile = new Tile([i, j], this);\n                row.push(newTile);\n            }\n\n            this.grid.push(row);\n        }\n\n    }\n\n    setRoot() {\n    \n    }\n\n    setTarget() {\n\n    }\n\n}","import Board from \"./board\";\nimport PolyTreeNode from \"./algorithms/polytreenode\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    // Create and fill board\n    let board = new Board();\n    board.fillGrid();\n    console.log(\"Board initialized and populated\")\n\n    // Set root node\n    board.grid[11][9].node = new PolyTreeNode(\"root\", [11, 9], board.grid);\n    let rootNode = board.grid[11][9];\n    rootNode.tile.classList.add(\"root-node\")\n    console.log(\"Root node set\");\n\n    // Set target node\n    board.grid[11][40].node = new PolyTreeNode(\"target\", [11, 40], board.grid);\n    let targetNode = board.grid[11][40];\n    targetNode.tile.classList.add(\"target-node\")\n    console.log(\"Target node set\");\n\n    // Set Visualize button functionality\n    let algorithm = \"bfs-btn\"; // Default algorithm\n\n    function setAlgo(event) {\n        algorithm = event.target.id;\n    }\n\n    function runAlgorithm() {\n        switch (algorithm) {\n            case \"bfs-btn\":\n                rootNode.node.buildTree();\n                console.log(\"Node tree built\")\n                rootNode.node.bfs(\"target\");\n                console.log(\"Algorithm executed\");\n                break;\n            case \"dfs-btn\":\n                rootNode.node.buildTree();\n                console.log(\"Node tree built\")\n                rootNode.node.dfs(\"target\");\n                console.log(\"Algorithm executed\");\n            default:\n                break;\n        }\n    }\n    \n    let dijkstrasButton = document.getElementById(\"dijkstras-btn\");\n    let astarButton = document.getElementById(\"astar-btn\");\n    let bfsButton = document.getElementById(\"bfs-btn\");\n    let dfsButton = document.getElementById(\"dfs-btn\");\n    \n    dijkstrasButton.addEventListener(\"click\", setAlgo);\n    astarButton.addEventListener(\"click\", setAlgo);\n    bfsButton.addEventListener(\"click\", setAlgo);\n    dfsButton.addEventListener(\"click\", setAlgo);\n    \n    let visButton = document.getElementById(\"vis-button\");\n    visButton.addEventListener(\"click\", runAlgorithm);\n\n})","import PolyTreeNode from \"./algorithms/polytreenode\";\n\nexport default class Tile {\n    \n    constructor(position, board) {\n        this.position = position;\n        // this.board = board;\n\n        this.tile = document.createElement(\"div\");\n        this.tile.classList.add(\"tile\");\n        this.tile.id = `${position[0]}-${position[1]}`;\n\n\n        let grid = document.getElementById(\"grid\");\n        grid.appendChild(this.tile);\n\n        this.node = new PolyTreeNode(null, position, board.grid);\n    }\n\n    visit() {\n        this.tile.classList.add(\"visited\");\n    }\n    \n    markFound() {\n        this.tile.classList.add(\"target-found\")\n    }\n}"],"sourceRoot":""}