{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/algorithms/polytreenode.js","webpack:///./src/board.js","webpack:///./src/index.js","webpack:///./src/tile.js"],"names":["PolyTreeNode","value","position","board","grid","tileObj","document","getElementById","parent","children","visitedTiles","shortestPath","visited","Set","add","join","visualize","bind","visualizeShortestPath","classList","forEach","child","remove","viz","length","setTimeout","currentPos","shift","tile","targetPos","pathPositions","console","log","target","queue","currentNode","push","findShortestPath","stack","i","unshift","increments","neighbors","inc","newPos","validPos","node","has","neighborNode","addParent","targetNodePos","parentNode","removeChild","Board","rootNode","targetNode","lastNodeType","setRoot","setTarget","row","j","Tile","setAttribute","newTile","pos","oldX","oldY","x","y","oldRootTile","oldNullTile","setDraggingFunctions","oldTargetTile","addEventListener","fillGrid","setAlgo","event","algorithm","id","dijkstrasButton","astarButton","bfsButton","dfsButton","runAlgorithm","buildTree","bfs","dfs","visButton","reset","innerHTML","resetButton","nodeValue","createElement","appendChild","handleDragStart","tileId","split","dragStartPos","currentTile","handleDragEnter","preventDefault","removeWall","placeWall","handleDragOver","handleDrop","dragEndPos","handleClick"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default class PolyTreeNode {\n\n    constructor(value, position, board) {\n        this.value = value;\n        this.position = position;\n        this.board = board;\n        this.grid = board.grid;\n\n        this.tileObj = document.getElementById(`${position[0]}-${position[1]}`);\n\n        this.parent = null;\n        this.children = [];\n\n        this.visitedTiles = []; // Used for computing and animating algorithms\n        this.shortestPath = [];\n\n        this.visited = new Set(); // Used for building node tree\n        this.visited.add(this.position.join(\"-\"));\n\n        this.visualize = this.visualize.bind(this);\n        this.visualizeShortestPath = this.visualizeShortestPath.bind(this);\n\n        // Comment these in to toggle showing children on hover.\n        // this.showChildren = this.showChildren.bind(this);\n        // this.hideChildren = this.hideChildren.bind(this);\n        // this.tileObj.addEventListener(\"mouseenter\", this.showChildren)\n        // this.tileObj.addEventListener(\"mouseleave\", this.hideChildren)\n    }\n\n    showChildren() {\n        this.tileObj.classList.add(\"parent\")\n        this.children.forEach(child => {\n            child.tileObj.classList.add(\"child\")\n        })\n    }\n\n    hideChildren() {\n        this.tileObj.classList.remove(\"parent\")\n        this.children.forEach(child => {\n            child.tileObj.classList.remove(\"child\")\n        })\n    }\n\n    visualize(visitedTiles, grid) {\n        let viz = this.visualize; // Saves function to a variable so that it can be accessed within setTimeout's callback\n\n        if (visitedTiles.length > 1) {\n            setTimeout(function() {\n                let currentPos = visitedTiles.shift()\n                grid[currentPos[0]][currentPos[1]].tile.classList.add(\"visited\");\n\n                viz(visitedTiles, grid); // Calls itself recursively to ensure other code has finished before starting next step\n            }, 5)\n\n        } else if (visitedTiles.length === 1) {\n            let targetPos = visitedTiles[0];\n            grid[targetPos[0]][targetPos[1]].tile.classList.add(\"target-found\")\n            this.visualizeShortestPath(this.shortestPath, this.grid);\n        }\n\n    }\n\n    visualizeShortestPath(pathPositions, grid) {\n        let viz = this.visualizeShortestPath;\n\n        if (pathPositions.length > 1) {\n            setTimeout(function() {\n                let currentPos = pathPositions.shift();\n                grid[currentPos[0]][currentPos[1]].tile.classList.add(\"shortest-path-node\");\n\n                viz(pathPositions, grid)\n            }, 25)\n        }\n        console.log(\"Shortest path animated\")\n    }\n\n    bfs(target) {\n        let queue = [this];\n\n        while (queue.length > 0) {\n            let currentNode = queue.shift();\n            \n            if (currentNode.value !== \"root\" && currentNode.value !== \"target\") {\n                this.visitedTiles.push(currentNode.position)\n            }\n\n            if (currentNode.value === target) {\n                this.visitedTiles.push(currentNode.position)\n                this.findShortestPath();\n                this.visualize(this.visitedTiles, this.grid);\n                return currentNode;\n            }\n            \n            queue.push(...currentNode.children);\n        }\n        console.log(\"Unsolvable grid detected\")\n        // Logic for handling unsolvable grid goes here\n    }\n\n    dfs(target) {\n        let stack = [this];\n\n        while (stack.length > 0) {\n            for (let i = 0; i < stack.length; i++) {\n                let currentNode = stack.shift();\n\n                if (currentNode.value === target) {\n                    this.visitedTiles.push(currentNode.position)\n                    this.findShortestPath();\n                    this.visualize(this.visitedTiles, this.grid);\n                    return currentNode;\n\n                } else if (currentNode.value !== \"root\") {\n                    this.visitedTiles.push(currentNode.position)\n                }\n\n                stack.unshift(...currentNode.children)\n            }\n\n        }\n\n\n    }\n\n    buildTree() {\n        const increments = [\n            [0, 1],\n            [1, 0],\n            [-1, 0],\n            [0, -1]\n\n            // Original, up-first tree build\n            // [-1, 0], // Up\n            // [0, 1], // Right\n            // [1, 0], // Down\n            // [0, -1] // Left\n        ];\n\n        // buildTree function will use the node on which it is called as the root node of the tree\n        let neighbors = [this]; // This is a queue\n\n        while (neighbors.length > 0) {\n            let currentNode = neighbors.shift();\n\n            for (let i = 0; i < increments.length; i++) {\n                let inc = increments[i];\n                let newPos = [currentNode.position[0] + inc[0], currentNode.position[1] + inc[1]];\n\n                if (currentNode.board.validPos(newPos) && this.grid[newPos[0]][newPos[1]].node.value !== \"wall\") {\n\n                    if (this.visited.has(newPos.join(\"-\"))) { // Call join on newPos to convert it to a valid keyname\n                        continue;\n                    }\n\n                    this.visited.add(newPos.join(\"-\"));\n\n                    let neighborNode = this.grid[newPos[0]][newPos[1]].node;\n                    neighborNode.addParent(currentNode)\n                    neighbors.push(neighborNode);\n                }\n            }\n        }\n\n    }\n\n    findShortestPath() {\n        let targetNodePos = this.visitedTiles[this.visitedTiles.length - 1]; \n        let currentNode = this.grid[targetNodePos[0]][targetNodePos[1]].node; // Very ugly way to get target node\n\n        this.shortestPath.unshift(currentNode.position);\n\n        while (currentNode.value !== \"root\" && currentNode.parent.value !== \"root\") {\n            this.shortestPath.unshift(currentNode.parent.position)\n            currentNode = currentNode.parent;\n        }\n\n    }\n\n    addParent(parentNode) {\n        if (this.parent !== null) { // Check to see if current node already has a parent\n            this.parent.removeChild(this) // Remove itself from old parent's children\n        }\n\n        if (parentNode !== null) {\n            this.parent = parentNode;\n            parentNode.children.push(this);\n        }\n    }\n\n}","import Tile from \"./tile\";\n\nexport default class Board { \n    constructor() {\n        this.grid = [];\n        this.rootNode;\n        this.targetNode;\n\n        this.lastNodeType;\n\n        this.validPos = this.validPos.bind(this);\n        this.setRoot = this.setRoot.bind(this);\n        this.setTarget = this.setTarget.bind(this);\n    }\n\n    fillGrid() { // Create tile objects, populate this.grid\n        for (let i = 0; i < 25; i++) { // Board is 25 x 48, 1200 total tiles\n            let row = [];\n\n            for (let j = 0; j < 48; j++) {\n                if (i === 12 && j === 9) {\n                    let rootNode = new Tile(\"root\", [i, j], this, true)\n                    rootNode.tile.classList.add(\"root-node\")\n                    rootNode.tile.setAttribute(\"draggable\", \"true\")\n                    this.rootNode = rootNode.node;\n                    row.push(rootNode)\n\n                } else if (i === 12 && j === 38) {\n                    let targetNode = new Tile(\"target\", [i, j], this, true)\n                    targetNode.tile.classList.add(\"target-node\")\n                    targetNode.tile.setAttribute(\"draggable\", \"true\")\n                    this.targetNode = targetNode.node;\n                    row.push(targetNode)\n\n                } else {\n                    let newTile = new Tile(null, [i, j], this, true);\n                    newTile.tile.setAttribute(\"draggable\", \"true\")\n                    row.push(newTile);\n                }\n            }\n\n            this.grid.push(row);\n        }\n    }\n\n    setRoot(pos) { // Change variables in this & setTarget to newRootTile/newNullTile\n        const oldX = this.rootNode.position[0];\n        const oldY = this.rootNode.position[1];\n        const x = pos[0];\n        const y = pos[1];\n\n        let oldRootTile = this.grid[oldX][oldY];\n        let oldNullTile = this.grid[x][y];\n\n        oldRootTile.node.value = null;\n        oldNullTile.node.value = \"root\";\n\n        oldRootTile.tile.classList.remove(\"root-node\");\n        oldNullTile.tile.classList.add(\"root-node\");\n\n        oldNullTile.tile.setAttribute(\"draggable\", \"true\")\n\n        oldRootTile.setDraggingFunctions();\n        oldNullTile.setDraggingFunctions();\n\n        this.rootNode = oldNullTile.node;\n    }\n\n    setTarget(pos) {\n        const oldX = this.targetNode.position[0];\n        const oldY = this.targetNode.position[1];\n        const x = pos[0];\n        const y = pos[1];\n\n        let oldTargetTile = this.grid[oldX][oldY];\n        let oldNullTile = this.grid[x][y];\n\n        oldTargetTile.node.value = null;\n        oldNullTile.node.value = \"target\";\n\n        oldTargetTile.tile.classList.remove(\"target-node\");\n        oldNullTile.tile.classList.add(\"target-node\");\n\n        oldNullTile.tile.setAttribute(\"draggable\", \"true\")\n\n        oldTargetTile.setDraggingFunctions();\n        oldNullTile.setDraggingFunctions();\n\n        this.targetNode = oldNullTile.node;\n    }\n\n    validPos(pos) {\n        return (pos[0] >= 0 && pos[0] < 25) && (pos[1] >= 0 && pos[1] < 48);\n    }\n}","import Board from \"./board\";\n\n// Smartpath Entry File:\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    // Create and fill board\n    let board = new Board();\n    board.fillGrid();\n    console.log(\"Board initialized and populated\")\n\n    // Add functionality to radio buttons\n    function setAlgo(event) {\n        algorithm = event.target.id;\n    }\n\n    let algorithm = \"bfs-btn\"; // Set default algorithm\n       \n    const dijkstrasButton = document.getElementById(\"dijkstras-btn\");\n    const astarButton = document.getElementById(\"astar-btn\");\n    const bfsButton = document.getElementById(\"bfs-btn\");\n    const dfsButton = document.getElementById(\"dfs-btn\");\n    \n    dijkstrasButton.addEventListener(\"click\", setAlgo);\n    astarButton.addEventListener(\"click\", setAlgo);\n    bfsButton.addEventListener(\"click\", setAlgo);\n    dfsButton.addEventListener(\"click\", setAlgo);\n\n\n    // Add functionality to Visualize button\n    function runAlgorithm() {\n        let rootNode = board.rootNode;\n\n        switch (algorithm) {\n            case \"bfs-btn\":\n                rootNode.buildTree();\n                console.log(\"Node tree built\")\n\n                rootNode.bfs(\"target\");\n                console.log(\"BFS executed\");\n                break;\n            case \"dfs-btn\":\n                rootNode.buildTree();\n                console.log(\"Node tree built\")\n\n                rootNode.dfs(\"target\");\n                console.log(\"DFS executed\");\n                break;\n            default:\n                break;\n        }\n    }\n\n    const visButton = document.getElementById(\"vis-button\");\n    visButton.addEventListener(\"click\", runAlgorithm);\n\n    // Add functionality to Reset button\n    function reset() {\n        let grid = document.getElementById(\"grid\");\n        grid.innerHTML = \"\";\n        \n        board.grid = [];\n        console.log(\"Board cleared\")\n        board.fillGrid();\n    }\n\n    const resetButton = document.getElementById(\"reset-button\");\n    resetButton.addEventListener(\"click\", reset)\n})","import PolyTreeNode from \"./algorithms/polytreenode\";\n\nexport default class Tile {\n    constructor(nodeValue, position, board) {\n        this.position = position;\n        this.board = board;\n\n        this.tile = document.createElement(\"div\");\n        this.tile.classList.add(\"tile\");\n        this.tile.id = `${position[0]}-${position[1]}`;\n\n        let grid = document.getElementById(\"grid\");\n        grid.appendChild(this.tile);\n\n        this.node = new PolyTreeNode(nodeValue, position, board); // This MUST come after this.tile's id is set\n\n        this.setDraggingFunctions();\n    }\n\n    setDraggingFunctions() {\n        let board = this.board;\n\n        const handleDragStart = event => {\n            console.log(\"Drag start fired\")\n\n            let tileId = event.target.id.split(\"-\");\n            let dragStartPos = [+tileId[0], +tileId[1]];\n            let currentTile = board.grid[dragStartPos[0]][dragStartPos[1]]\n            board.lastNodeType = board.grid[dragStartPos[0]][dragStartPos[1]].node.value;\n        }\n\n        const handleDragEnter = event => {\n            console.log(\"Drag enter fired\")\n            event.preventDefault()\n\n            let tileId = event.target.id.split(\"-\");\n            let currentTile = board.grid[+tileId[0]][+tileId[1]]\n\n            if (board.lastNodeType === \"wall\" || board.lastNodeType === null) {\n                if (currentTile.node.value === \"wall\") {\n                    currentTile.removeWall()\n                } else if (currentTile.node.value === null) {\n                    currentTile.placeWall()\n                }\n            }\n        }\n\n        const handleDragOver = event => {\n            console.log(\"Drag over fired\")\n            event.preventDefault()\n        }\n\n        const handleDrop = event => {\n            console.log(\"Drop fired\")\n            event.preventDefault();\n\n            let tileId = event.target.id.split(\"-\");\n            let dragEndPos = [+tileId[0], +tileId[1]];\n\n            if (board.lastNodeType === \"root\") {\n                board.setRoot(dragEndPos)\n            } else if (board.lastNodeType === \"target\") {\n                board.setTarget(dragEndPos)\n            }\n        }\n\n        const handleClick = event => {\n            console.log(\"Click fired\")\n            event.preventDefault()\n\n            let tileId = event.target.id.split(\"-\");\n            let currentTile = board.grid[+tileId[0]][+tileId[1]]\n\n            if (currentTile.node.value === \"wall\") {\n                currentTile.removeWall()\n            } else if (currentTile.node.value === null) {\n                currentTile.placeWall()\n            }\n        }\n\n        // All tiles listen for dragstart\n        this.tile.addEventListener(\"dragstart\", handleDragStart)\n\n        // Only walls and nulls receive other listeners\n        if (this.node.value === \"wall\" || this.node.value === null) {\n            this.tile.addEventListener(\"dragenter\", handleDragEnter)\n            this.tile.addEventListener(\"dragover\", handleDragOver)\n            this.tile.addEventListener(\"drop\", handleDrop)\n            this.tile.addEventListener(\"click\", handleClick)\n        }\n    }\n\n    placeWall() {\n        this.node.value = \"wall\";\n        this.tile.classList.add(\"wall\")\n        console.log(\"Wall placed\")\n    }\n\n    removeWall() {\n        this.node.value = null;\n        this.tile.classList.remove(\"wall\")\n        console.log(\"Wall removed\")\n    }\n\n}"],"sourceRoot":""}