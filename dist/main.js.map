{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/algorithms/polytreenode.js","webpack:///./src/board.js","webpack:///./src/index.js","webpack:///./src/tile.js"],"names":["PolyTreeNode","value","position","board","grid","tileObj","document","getElementById","parent","children","visitedTiles","shortestPath","visited","Set","add","join","visualize","bind","visualizeShortestPath","placeWall","removeWall","addEventListener","classList","forEach","child","remove","viz","length","setTimeout","currentPos","shift","tile","targetPos","pathPositions","console","log","target","queue","currentNode","push","findShortestPath","stack","i","unshift","increments","neighbors","inc","newPos","validPos","has","neighborNode","node","addParent","targetNodePos","parentNode","removeChild","removeEventListener","Board","rootNode","targetNode","lastNodeType","setRoot","setTarget","row","j","Tile","setAttribute","newTile","pos","oldX","oldY","x","y","oldRootTile","oldNullTile","setDraggingFunctions","oldTargetTile","fillGrid","setAlgo","event","algorithm","id","dijkstrasButton","astarButton","bfsButton","dfsButton","runAlgorithm","buildTree","bfs","dfs","visButton","reset","innerHTML","resetButton","nodeValue","createElement","appendChild","handleDragStart","tileId","split","dragStartPos","handleDragEnter","preventDefault","handleDragOver","handleDrop","dragEndPos"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IClFqBA,Y;AAEjB,wBAAYC,KAAZ,EAAmBC,QAAnB,EAA6BC,KAA7B,EAAoC;AAAA;;AAChC,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYD,KAAK,CAACC,IAAlB;AAEA,SAAKC,OAAL,GAAeC,QAAQ,CAACC,cAAT,WAA2BL,QAAQ,CAAC,CAAD,CAAnC,cAA0CA,QAAQ,CAAC,CAAD,CAAlD,EAAf;AAEA,SAAKM,MAAL,GAAc,IAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AAEA,SAAKC,YAAL,GAAoB,EAApB,CAXgC,CAWR;;AACxB,SAAKC,YAAL,GAAoB,EAApB;AAEA,SAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf,CAdgC,CAcN;;AAC1B,SAAKD,OAAL,CAAaE,GAAb,CAAiB,KAAKZ,QAAL,CAAca,IAAd,CAAmB,GAAnB,CAAjB;AAEA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAA7B;AAEA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB,CArBgC,CAuBhC;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA,QAAI,KAAKhB,KAAL,KAAe,MAAf,IAAyB,KAAKA,KAAL,KAAe,QAA5C,EAAsD;AAClD,WAAKI,OAAL,CAAagB,gBAAb,CAA8B,OAA9B,EAAuC,KAAKF,SAA5C;AACH;AACJ;;;;mCAEc;AACX,WAAKd,OAAL,CAAaiB,SAAb,CAAuBR,GAAvB,CAA2B,QAA3B;AACA,WAAKL,QAAL,CAAcc,OAAd,CAAsB,UAAAC,KAAK,EAAI;AAC3BA,aAAK,CAACnB,OAAN,CAAciB,SAAd,CAAwBR,GAAxB,CAA4B,OAA5B;AACH,OAFD;AAGH;;;mCAEc;AACX,WAAKT,OAAL,CAAaiB,SAAb,CAAuBG,MAAvB,CAA8B,QAA9B;AACA,WAAKhB,QAAL,CAAcc,OAAd,CAAsB,UAAAC,KAAK,EAAI;AAC3BA,aAAK,CAACnB,OAAN,CAAciB,SAAd,CAAwBG,MAAxB,CAA+B,OAA/B;AACH,OAFD;AAGH;;;8BAESf,Y,EAAcN,I,EAAM;AAC1B,UAAIsB,GAAG,GAAG,KAAKV,SAAf,CAD0B,CACA;;AAE1B,UAAIN,YAAY,CAACiB,MAAb,GAAsB,CAA1B,EAA6B;AACzBC,kBAAU,CAAC,YAAW;AAClB,cAAIC,UAAU,GAAGnB,YAAY,CAACoB,KAAb,EAAjB;AACA1B,cAAI,CAACyB,UAAU,CAAC,CAAD,CAAX,CAAJ,CAAoBA,UAAU,CAAC,CAAD,CAA9B,EAAmCE,IAAnC,CAAwCT,SAAxC,CAAkDR,GAAlD,CAAsD,SAAtD;AAEAY,aAAG,CAAChB,YAAD,EAAeN,IAAf,CAAH,CAJkB,CAIO;AAC5B,SALS,EAKP,CALO,CAAV;AAOH,OARD,MAQO,IAAIM,YAAY,CAACiB,MAAb,KAAwB,CAA5B,EAA+B;AAClC,YAAIK,SAAS,GAAGtB,YAAY,CAAC,CAAD,CAA5B;AACAN,YAAI,CAAC4B,SAAS,CAAC,CAAD,CAAV,CAAJ,CAAmBA,SAAS,CAAC,CAAD,CAA5B,EAAiCD,IAAjC,CAAsCT,SAAtC,CAAgDR,GAAhD,CAAoD,cAApD;AACA,aAAKI,qBAAL,CAA2B,KAAKP,YAAhC,EAA8C,KAAKP,IAAnD;AACH;AAEJ;;;0CAEqB6B,a,EAAe7B,I,EAAM;AACvC,UAAIsB,GAAG,GAAG,KAAKR,qBAAf;;AAEA,UAAIe,aAAa,CAACN,MAAd,GAAuB,CAA3B,EAA8B;AAC1BC,kBAAU,CAAC,YAAW;AAClB,cAAIC,UAAU,GAAGI,aAAa,CAACH,KAAd,EAAjB;AACA1B,cAAI,CAACyB,UAAU,CAAC,CAAD,CAAX,CAAJ,CAAoBA,UAAU,CAAC,CAAD,CAA9B,EAAmCE,IAAnC,CAAwCT,SAAxC,CAAkDR,GAAlD,CAAsD,oBAAtD;AAEAY,aAAG,CAACO,aAAD,EAAgB7B,IAAhB,CAAH;AACH,SALS,EAKP,EALO,CAAV;AAMH;;AACD8B,aAAO,CAACC,GAAR,CAAY,wBAAZ;AACH;;;wBAEGC,M,EAAQ;AACR,UAAIC,KAAK,GAAG,CAAC,IAAD,CAAZ;;AAEA,aAAOA,KAAK,CAACV,MAAN,GAAe,CAAtB,EAAyB;AAErB,YAAIW,WAAW,GAAGD,KAAK,CAACP,KAAN,EAAlB;;AAEA,YAAIQ,WAAW,CAACrC,KAAZ,KAAsB,MAAtB,IAAgCqC,WAAW,CAACrC,KAAZ,KAAsB,QAAtD,IAAkEqC,WAAW,CAACrC,KAAZ,KAAsB,MAA5F,EAAoG;AAChG,eAAKS,YAAL,CAAkB6B,IAAlB,CAAuBD,WAAW,CAACpC,QAAnC;AACH;;AAED,YAAIoC,WAAW,CAACrC,KAAZ,KAAsBmC,MAA1B,EAAkC;AAC9B,eAAK1B,YAAL,CAAkB6B,IAAlB,CAAuBD,WAAW,CAACpC,QAAnC;AACA,eAAKsC,gBAAL;AACA,eAAKxB,SAAL,CAAe,KAAKN,YAApB,EAAkC,KAAKN,IAAvC;AACA,iBAAOkC,WAAP;AACH;;AAEDD,aAAK,CAACE,IAAN,OAAAF,KAAK,qBAASC,WAAW,CAAC7B,QAArB,EAAL;AACH;;AACDyB,aAAO,CAACC,GAAR,CAAY,0BAAZ,EApBQ,CAqBR;AACH;;;wBAEGC,M,EAAQ;AAAE;AACV,UAAIK,KAAK,GAAG,CAAC,IAAD,CAAZ;;AAEA,aAAOA,KAAK,CAACd,MAAN,GAAe,CAAtB,EAAyB;AACrB,aAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACd,MAA1B,EAAkCe,CAAC,EAAnC,EAAuC;AACnC,cAAIJ,WAAW,GAAGG,KAAK,CAACX,KAAN,EAAlB;;AAEA,cAAIQ,WAAW,CAACrC,KAAZ,KAAsBmC,MAA1B,EAAkC;AAC9B,iBAAK1B,YAAL,CAAkB6B,IAAlB,CAAuBD,WAAW,CAACpC,QAAnC;AACA,iBAAKsC,gBAAL;AACA,iBAAKxB,SAAL,CAAe,KAAKN,YAApB,EAAkC,KAAKN,IAAvC;AACA,mBAAOkC,WAAP;AAEH,WAND,MAMO,IAAIA,WAAW,CAACrC,KAAZ,KAAsB,MAA1B,EAAkC;AACrC,iBAAKS,YAAL,CAAkB6B,IAAlB,CAAuBD,WAAW,CAACpC,QAAnC;AACH;;AAEDuC,eAAK,CAACE,OAAN,OAAAF,KAAK,qBAAYH,WAAW,CAAC7B,QAAxB,EAAL;AACH;AAEJ;AAGJ;;;gCAEW;AACR,UAAMmC,UAAU,GAAG,CACf,CAAC,CAAC,CAAF,EAAK,CAAL,CADe,EACN;AACT,OAAC,CAAD,EAAI,CAAJ,CAFe,EAEP;AACR,OAAC,CAAD,EAAI,CAAJ,CAHe,EAGP;AACR,OAAC,CAAD,EAAI,CAAC,CAAL,CAJe,CAIP;AAER;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAde,OAAnB,CADQ,CAkBR;;AACA,UAAIC,SAAS,GAAG,CAAC,IAAD,CAAhB,CAnBQ,CAmBgB;;AAExB,aAAOA,SAAS,CAAClB,MAAV,GAAmB,CAA1B,EAA6B;AACzB,YAAIW,WAAW,GAAGO,SAAS,CAACf,KAAV,EAAlB;;AAEA,aAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,UAAU,CAACjB,MAA/B,EAAuCe,CAAC,EAAxC,EAA4C;AACxC,cAAII,GAAG,GAAGF,UAAU,CAACF,CAAD,CAApB;AACA,cAAIK,MAAM,GAAG,CAACT,WAAW,CAACpC,QAAZ,CAAqB,CAArB,IAA0B4C,GAAG,CAAC,CAAD,CAA9B,EAAmCR,WAAW,CAACpC,QAAZ,CAAqB,CAArB,IAA0B4C,GAAG,CAAC,CAAD,CAAhE,CAAb;;AAEA,cAAIR,WAAW,CAACnC,KAAZ,CAAkB6C,QAAlB,CAA2BD,MAA3B,CAAJ,EAAwC;AAEpC,gBAAI,KAAKnC,OAAL,CAAaqC,GAAb,CAAiBF,MAAM,CAAChC,IAAP,CAAY,GAAZ,CAAjB,CAAJ,EAAwC;AAAE;AACtC;AACH;;AAED,iBAAKH,OAAL,CAAaE,GAAb,CAAiBiC,MAAM,CAAChC,IAAP,CAAY,GAAZ,CAAjB;AAEA,gBAAImC,YAAY,GAAG,KAAK9C,IAAL,CAAU2C,MAAM,CAAC,CAAD,CAAhB,EAAqBA,MAAM,CAAC,CAAD,CAA3B,EAAgCI,IAAnD;AACAD,wBAAY,CAACE,SAAb,CAAuBd,WAAvB;AACAO,qBAAS,CAACN,IAAV,CAAeW,YAAf;AACH;AACJ,SAnBwB,CAqBzB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEH;AAEJ;;;uCAEkB;AACf,UAAIG,aAAa,GAAG,KAAK3C,YAAL,CAAkB,KAAKA,YAAL,CAAkBiB,MAAlB,GAA2B,CAA7C,CAApB;AACA,UAAIW,WAAW,GAAG,KAAKlC,IAAL,CAAUiD,aAAa,CAAC,CAAD,CAAvB,EAA4BA,aAAa,CAAC,CAAD,CAAzC,EAA8CF,IAAhE,CAFe,CAEuD;;AAEtE,WAAKxC,YAAL,CAAkBgC,OAAlB,CAA0BL,WAAW,CAACpC,QAAtC;AACA;;AACA,aAAOoC,WAAW,CAACrC,KAAZ,KAAsB,MAAtB,IAAgCqC,WAAW,CAAC9B,MAAZ,CAAmBP,KAAnB,KAA6B,MAApE,EAA4E;AACxE,aAAKU,YAAL,CAAkBgC,OAAlB,CAA0BL,WAAW,CAAC9B,MAAZ,CAAmBN,QAA7C;AACAoC,mBAAW,GAAGA,WAAW,CAAC9B,MAA1B;AACH;AAEJ;;;8BAES8C,U,EAAY;AAClB,UAAI,KAAK9C,MAAL,KAAgB,IAApB,EAA0B;AAAE;AACxB;AACA,aAAKA,MAAL,CAAY+C,WAAZ,CAAwB,IAAxB,EAFsB,CAEQ;AACjC;;AAED,UAAID,UAAU,KAAK,IAAnB,EAAyB;AACrB,aAAK9C,MAAL,GAAc8C,UAAd;AACAA,kBAAU,CAAC7C,QAAX,CAAoB8B,IAApB,CAAyB,IAAzB;AACH;AACJ;;;gCAEW;AACR,UAAI,KAAKtC,KAAL,KAAe,MAAf,IAAyB,KAAKA,KAAL,KAAe,QAA5C,EAAsD;AAClD;AACA,aAAKA,KAAL,GAAa,MAAb;AACA,aAAKI,OAAL,CAAaiB,SAAb,CAAuBR,GAAvB,CAA2B,MAA3B;AACA,aAAKT,OAAL,CAAamD,mBAAb,CAAiC,OAAjC,EAA0C,KAAKrC,SAA/C;AACA,aAAKd,OAAL,CAAagB,gBAAb,CAA8B,OAA9B,EAAuC,KAAKD,UAA5C;AACAc,eAAO,CAACC,GAAR,CAAY,aAAZ;AACH;AACJ;;;iCAEY;AACT,UAAI,KAAKlC,KAAL,KAAe,MAAnB,EAA2B;AACvB,aAAKA,KAAL,GAAa,IAAb;AACA,aAAKI,OAAL,CAAaiB,SAAb,CAAuBG,MAAvB,CAA8B,MAA9B;AACA,aAAKpB,OAAL,CAAamD,mBAAb,CAAiC,OAAjC,EAA0C,KAAKpC,UAA/C;AACA,aAAKf,OAAL,CAAagB,gBAAb,CAA8B,OAA9B,EAAuC,KAAKF,SAA5C;AACAe,eAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3PL;;IAEqBsB,K;AACjB,mBAAc;AAAA;;AACV,SAAKrD,IAAL,GAAY,EAAZ;AACA,SAAKsD,QAAL;AACA,SAAKC,UAAL;AAEA,SAAKC,YAAL;AAEA,SAAKZ,QAAL,GAAgB,KAAKA,QAAL,CAAc/B,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAK4C,OAAL,GAAe,KAAKA,OAAL,CAAa5C,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAK6C,SAAL,GAAiB,KAAKA,SAAL,CAAe7C,IAAf,CAAoB,IAApB,CAAjB;AACH;;;;+BAEU;AAAE;AACT,WAAK,IAAIyB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAAE;AAC3B,YAAIqB,GAAG,GAAG,EAAV;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,cAAItB,CAAC,KAAK,EAAN,IAAYsB,CAAC,KAAK,CAAtB,EAAyB;AACrB,gBAAIN,QAAQ,GAAG,IAAIO,6CAAJ,CAAS,MAAT,EAAiB,CAACvB,CAAD,EAAIsB,CAAJ,CAAjB,EAAyB,IAAzB,EAA+B,IAA/B,CAAf;AACAN,oBAAQ,CAAC3B,IAAT,CAAcT,SAAd,CAAwBR,GAAxB,CAA4B,WAA5B;AACA4C,oBAAQ,CAAC3B,IAAT,CAAcmC,YAAd,CAA2B,WAA3B,EAAwC,MAAxC;AACA,iBAAKR,QAAL,GAAgBA,QAAQ,CAACP,IAAzB;AACAY,eAAG,CAACxB,IAAJ,CAASmB,QAAT;AAEH,WAPD,MAOO,IAAIhB,CAAC,KAAK,EAAN,IAAYsB,CAAC,KAAK,EAAtB,EAA0B;AAC7B,gBAAIL,UAAU,GAAG,IAAIM,6CAAJ,CAAS,QAAT,EAAmB,CAACvB,CAAD,EAAIsB,CAAJ,CAAnB,EAA2B,IAA3B,EAAiC,IAAjC,CAAjB;AACAL,sBAAU,CAAC5B,IAAX,CAAgBT,SAAhB,CAA0BR,GAA1B,CAA8B,aAA9B;AACA6C,sBAAU,CAAC5B,IAAX,CAAgBmC,YAAhB,CAA6B,WAA7B,EAA0C,MAA1C;AACA,iBAAKP,UAAL,GAAkBA,UAAU,CAACR,IAA7B;AACAY,eAAG,CAACxB,IAAJ,CAASoB,UAAT;AAEH,WAPM,MAOA;AACH,gBAAIQ,OAAO,GAAG,IAAIF,6CAAJ,CAAS,IAAT,EAAe,CAACvB,CAAD,EAAIsB,CAAJ,CAAf,EAAuB,IAAvB,EAA6B,IAA7B,CAAd;AACAD,eAAG,CAACxB,IAAJ,CAAS4B,OAAT;AACH;AACJ;;AAED,aAAK/D,IAAL,CAAUmC,IAAV,CAAewB,GAAf;AACH;AACJ;;;4BAEOK,G,EAAK;AACT,UAAMC,IAAI,GAAG,KAAKX,QAAL,CAAcxD,QAAd,CAAuB,CAAvB,CAAb;AACA,UAAMoE,IAAI,GAAG,KAAKZ,QAAL,CAAcxD,QAAd,CAAuB,CAAvB,CAAb;AACA,UAAMqE,CAAC,GAAGH,GAAG,CAAC,CAAD,CAAb;AACA,UAAMI,CAAC,GAAGJ,GAAG,CAAC,CAAD,CAAb;AAEA,UAAIK,WAAW,GAAG,KAAKrE,IAAL,CAAUiE,IAAV,EAAgBC,IAAhB,CAAlB;AACA,UAAII,WAAW,GAAG,KAAKtE,IAAL,CAAUmE,CAAV,EAAaC,CAAb,CAAlB;AAEAC,iBAAW,CAACtB,IAAZ,CAAiBlD,KAAjB,GAAyB,IAAzB;AACAyE,iBAAW,CAACvB,IAAZ,CAAiBlD,KAAjB,GAAyB,MAAzB;AAEAwE,iBAAW,CAAC1C,IAAZ,CAAiBT,SAAjB,CAA2BG,MAA3B,CAAkC,WAAlC;AACAiD,iBAAW,CAAC3C,IAAZ,CAAiBT,SAAjB,CAA2BR,GAA3B,CAA+B,WAA/B;AAEA4D,iBAAW,CAAC3C,IAAZ,CAAiBmC,YAAjB,CAA8B,WAA9B,EAA2C,MAA3C;AAEAO,iBAAW,CAACE,oBAAZ;AACAD,iBAAW,CAACC,oBAAZ;AAEA,WAAKjB,QAAL,GAAgBgB,WAAW,CAACvB,IAA5B;AACH;;;8BAESiB,G,EAAK;AACX,UAAMC,IAAI,GAAG,KAAKV,UAAL,CAAgBzD,QAAhB,CAAyB,CAAzB,CAAb;AACA,UAAMoE,IAAI,GAAG,KAAKX,UAAL,CAAgBzD,QAAhB,CAAyB,CAAzB,CAAb;AACA,UAAMqE,CAAC,GAAGH,GAAG,CAAC,CAAD,CAAb;AACA,UAAMI,CAAC,GAAGJ,GAAG,CAAC,CAAD,CAAb;AAEA,UAAIQ,aAAa,GAAG,KAAKxE,IAAL,CAAUiE,IAAV,EAAgBC,IAAhB,CAApB;AACA,UAAII,WAAW,GAAG,KAAKtE,IAAL,CAAUmE,CAAV,EAAaC,CAAb,CAAlB;AAEAI,mBAAa,CAACzB,IAAd,CAAmBlD,KAAnB,GAA2B,IAA3B;AACAyE,iBAAW,CAACvB,IAAZ,CAAiBlD,KAAjB,GAAyB,QAAzB;AAEA2E,mBAAa,CAAC7C,IAAd,CAAmBT,SAAnB,CAA6BG,MAA7B,CAAoC,aAApC;AACAiD,iBAAW,CAAC3C,IAAZ,CAAiBT,SAAjB,CAA2BR,GAA3B,CAA+B,aAA/B;AAEA4D,iBAAW,CAAC3C,IAAZ,CAAiBmC,YAAjB,CAA8B,WAA9B,EAA2C,MAA3C;AAEAU,mBAAa,CAACD,oBAAd;AACAD,iBAAW,CAACC,oBAAZ;AAEA,WAAKhB,UAAL,GAAkBe,WAAW,CAACvB,IAA9B;AACH;;;6BAEQiB,G,EAAK;AACV,aAAQA,GAAG,CAAC,CAAD,CAAH,IAAU,CAAV,IAAeA,GAAG,CAAC,CAAD,CAAH,GAAS,EAAzB,IAAiCA,GAAG,CAAC,CAAD,CAAH,IAAU,CAAV,IAAeA,GAAG,CAAC,CAAD,CAAH,GAAS,EAAhE;AACH;;;;;;;;;;;;;;;;;;AC5FL;AAAA;CAEA;;AACA9D,QAAQ,CAACe,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAEhD;AACA,MAAIlB,KAAK,GAAG,IAAIsD,8CAAJ,EAAZ;AACAtD,OAAK,CAAC0E,QAAN;AACA3C,SAAO,CAACC,GAAR,CAAY,iCAAZ,EALgD,CAOhD;;AACA,WAAS2C,OAAT,CAAiBC,KAAjB,EAAwB;AACpBC,aAAS,GAAGD,KAAK,CAAC3C,MAAN,CAAa6C,EAAzB;AACH;;AAED,MAAID,SAAS,GAAG,SAAhB,CAZgD,CAYrB;;AAE3B,MAAME,eAAe,GAAG5E,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAxB;AACA,MAAM4E,WAAW,GAAG7E,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAApB;AACA,MAAM6E,SAAS,GAAG9E,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAlB;AACA,MAAM8E,SAAS,GAAG/E,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAlB;AAEA2E,iBAAe,CAAC7D,gBAAhB,CAAiC,OAAjC,EAA0CyD,OAA1C;AACAK,aAAW,CAAC9D,gBAAZ,CAA6B,OAA7B,EAAsCyD,OAAtC;AACAM,WAAS,CAAC/D,gBAAV,CAA2B,OAA3B,EAAoCyD,OAApC;AACAO,WAAS,CAAChE,gBAAV,CAA2B,OAA3B,EAAoCyD,OAApC,EAtBgD,CAyBhD;;AACA,WAASQ,YAAT,GAAwB;AACpB,QAAI5B,QAAQ,GAAGvD,KAAK,CAACuD,QAArB;;AAEA,YAAQsB,SAAR;AACI,WAAK,SAAL;AACI;AACA;AACAtB,gBAAQ,CAAC6B,SAAT;AACArD,eAAO,CAACC,GAAR,CAAY,iBAAZ;AAEAuB,gBAAQ,CAAC8B,GAAT,CAAa,QAAb;AACAtD,eAAO,CAACC,GAAR,CAAY,cAAZ;AACA;;AACJ,WAAK,SAAL;AACI;AACA;AACAuB,gBAAQ,CAAC6B,SAAT;AACArD,eAAO,CAACC,GAAR,CAAY,iBAAZ;AAEAuB,gBAAQ,CAAC+B,GAAT,CAAa,QAAb;AACAvD,eAAO,CAACC,GAAR,CAAY,cAAZ;AACA;;AACJ;AACI;AApBR;AAsBH;;AAED,MAAIuD,SAAS,GAAGpF,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAhB;AACAmF,WAAS,CAACrE,gBAAV,CAA2B,OAA3B,EAAoCiE,YAApC,EAtDgD,CAwDhD;;AACA,WAASK,KAAT,GAAiB;AACb,QAAIvF,IAAI,GAAGE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX;AACAH,QAAI,CAACwF,SAAL,GAAiB,EAAjB;AAEAzF,SAAK,CAACC,IAAN,GAAa,EAAb,CAJa,CAKb;;AACA8B,WAAO,CAACC,GAAR,CAAY,eAAZ;AACAhC,SAAK,CAAC0E,QAAN;AACH;;AAED,MAAIgB,WAAW,GAAGvF,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAlB;AACAsF,aAAW,CAACxE,gBAAZ,CAA6B,OAA7B,EAAsCsE,KAAtC;AACH,CArED,E;;;;;;;;;;;;;;;;;;;;;ACHA;;IAEqB1B,I;AACjB,gBAAY6B,SAAZ,EAAuB5F,QAAvB,EAAiCC,KAAjC,EAAwC;AAAA;;AACpC,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAb;AAEA,SAAK4B,IAAL,GAAYzB,QAAQ,CAACyF,aAAT,CAAuB,KAAvB,CAAZ;AACA,SAAKhE,IAAL,CAAUT,SAAV,CAAoBR,GAApB,CAAwB,MAAxB;AACA,SAAKiB,IAAL,CAAUkD,EAAV,aAAkB/E,QAAQ,CAAC,CAAD,CAA1B,cAAiCA,QAAQ,CAAC,CAAD,CAAzC;AAEA,QAAIE,IAAI,GAAGE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX;AACAH,QAAI,CAAC4F,WAAL,CAAiB,KAAKjE,IAAtB;AAEA,SAAKoB,IAAL,GAAY,IAAInD,gEAAJ,CAAiB8F,SAAjB,EAA4B5F,QAA5B,EAAsCC,KAAtC,CAAZ,CAXoC,CAWsB;;AAE1D,SAAKwE,oBAAL;AACH;;;;2CAEsB;AACnB,UAAIxE,KAAK,GAAG,KAAKA,KAAjB;;AAEA,UAAM8F,eAAe,GAAG,SAAlBA,eAAkB,CAAAlB,KAAK,EAAI;AAC7B7C,eAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,YAAI+D,MAAM,GAAGnB,KAAK,CAAC3C,MAAN,CAAa6C,EAAb,CAAgBkB,KAAhB,CAAsB,GAAtB,CAAb;AACA,YAAIC,YAAY,GAAG,CAAC,CAACF,MAAM,CAAC,CAAD,CAAR,EAAa,CAACA,MAAM,CAAC,CAAD,CAApB,CAAnB;AACA/F,aAAK,CAACyD,YAAN,GAAqBzD,KAAK,CAACC,IAAN,CAAWgG,YAAY,CAAC,CAAD,CAAvB,EAA4BA,YAAY,CAAC,CAAD,CAAxC,EAA6CjD,IAA7C,CAAkDlD,KAAvE;AACH,OAND;;AAQA,UAAMoG,eAAe,GAAG,SAAlBA,eAAkB,CAAAtB,KAAK,EAAI;AAC7B7C,eAAO,CAACC,GAAR,CAAY,kBAAZ;AACA4C,aAAK,CAACuB,cAAN;AACH,OAHD;;AAKA,UAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAxB,KAAK,EAAI;AAC5B7C,eAAO,CAACC,GAAR,CAAY,iBAAZ;AACA4C,aAAK,CAACuB,cAAN;AACH,OAHD;;AAKA,UAAME,UAAU,GAAG,SAAbA,UAAa,CAAAzB,KAAK,EAAI;AACxB7C,eAAO,CAACC,GAAR,CAAY,YAAZ;AACA4C,aAAK,CAACuB,cAAN;AAEA,YAAIJ,MAAM,GAAEnB,KAAK,CAAC3C,MAAN,CAAa6C,EAAb,CAAgBkB,KAAhB,CAAsB,GAAtB,CAAZ;AACA,YAAIM,UAAU,GAAG,CAAC,CAACP,MAAM,CAAC,CAAD,CAAR,EAAa,CAACA,MAAM,CAAC,CAAD,CAApB,CAAjB;;AAEA,YAAI/F,KAAK,CAACyD,YAAN,KAAuB,MAA3B,EAAmC;AAC/BzD,eAAK,CAAC0D,OAAN,CAAc4C,UAAd;AACH,SAFD,MAEO,IAAItG,KAAK,CAACyD,YAAN,KAAuB,QAA3B,EAAqC;AACxCzD,eAAK,CAAC2D,SAAN,CAAgB2C,UAAhB;AACH,SAFM,MAEA,IAAItG,KAAK,CAACyD,YAAN,KAAuB,IAA3B,EAAiC,CACpC;AACH;AACJ,OAdD;;AAgBA,UAAI,KAAKT,IAAL,CAAUlD,KAAV,KAAoB,MAApB,IAA8B,KAAKkD,IAAL,CAAUlD,KAAV,KAAoB,QAAtD,EAAgE;AAC5D,aAAK8B,IAAL,CAAUV,gBAAV,CAA2B,WAA3B,EAAwC4E,eAAxC;AACH,OAFD,MAEO;AACH,aAAKlE,IAAL,CAAUV,gBAAV,CAA2B,WAA3B,EAAwCgF,eAAxC;AACA,aAAKtE,IAAL,CAAUV,gBAAV,CAA2B,UAA3B,EAAuCkF,cAAvC;AACA,aAAKxE,IAAL,CAAUV,gBAAV,CAA2B,MAA3B,EAAmCmF,UAAnC;AACH;AACJ","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default class PolyTreeNode {\n\n    constructor(value, position, board) {\n        this.value = value;\n        this.position = position;\n        this.board = board;\n        this.grid = board.grid;\n\n        this.tileObj = document.getElementById(`${position[0]}-${position[1]}`);\n\n        this.parent = null;\n        this.children = [];\n\n        this.visitedTiles = []; // Used for computing and animating algorithms\n        this.shortestPath = [];\n\n        this.visited = new Set(); // Used for building node tree\n        this.visited.add(this.position.join(\"-\"));\n\n        this.visualize = this.visualize.bind(this);\n        this.visualizeShortestPath = this.visualizeShortestPath.bind(this);\n\n        this.placeWall = this.placeWall.bind(this);\n        this.removeWall = this.removeWall.bind(this);\n\n        // this.showChildren = this.showChildren.bind(this);\n        // this.hideChildren = this.hideChildren.bind(this);\n\n        // this.tileObj.addEventListener(\"mouseenter\", this.showChildren)\n        // this.tileObj.addEventListener(\"mouseleave\", this.hideChildren)\n\n        // if (this.value === \"root\") {\n        //     this.buildTree();\n        // }\n\n        if (this.value !== \"root\" && this.value !== \"target\") {\n            this.tileObj.addEventListener(\"click\", this.placeWall)\n        }\n    }\n\n    showChildren() {\n        this.tileObj.classList.add(\"parent\")\n        this.children.forEach(child => {\n            child.tileObj.classList.add(\"child\")\n        })\n    }\n\n    hideChildren() {\n        this.tileObj.classList.remove(\"parent\")\n        this.children.forEach(child => {\n            child.tileObj.classList.remove(\"child\")\n        })\n    }\n\n    visualize(visitedTiles, grid) {\n        let viz = this.visualize; // Saves function to a variable so that it can be accessed within setTimeout's callback\n\n        if (visitedTiles.length > 1) {\n            setTimeout(function() {\n                let currentPos = visitedTiles.shift()\n                grid[currentPos[0]][currentPos[1]].tile.classList.add(\"visited\");\n\n                viz(visitedTiles, grid); // Calls itself recursively to ensure other code has finished before starting next step\n            }, 5)\n\n        } else if (visitedTiles.length === 1) {\n            let targetPos = visitedTiles[0];\n            grid[targetPos[0]][targetPos[1]].tile.classList.add(\"target-found\")\n            this.visualizeShortestPath(this.shortestPath, this.grid);\n        }\n\n    }\n\n    visualizeShortestPath(pathPositions, grid) {\n        let viz = this.visualizeShortestPath;\n\n        if (pathPositions.length > 1) {\n            setTimeout(function() {\n                let currentPos = pathPositions.shift();\n                grid[currentPos[0]][currentPos[1]].tile.classList.add(\"shortest-path-node\");\n\n                viz(pathPositions, grid)\n            }, 25)\n        }\n        console.log(\"Shortest path animated\")\n    }\n\n    bfs(target) {\n        let queue = [this];\n\n        while (queue.length > 0) {\n\n            let currentNode = queue.shift();\n            \n            if (currentNode.value !== \"root\" && currentNode.value !== \"target\" && currentNode.value !== \"wall\") {\n                this.visitedTiles.push(currentNode.position)\n            }\n\n            if (currentNode.value === target) {\n                this.visitedTiles.push(currentNode.position)\n                this.findShortestPath();\n                this.visualize(this.visitedTiles, this.grid);\n                return currentNode;\n            }\n            \n            queue.push(...currentNode.children);\n        }\n        console.log(\"Unsolvable grid detected\")\n        // Logic for handling unsolvable grid goes here\n    }\n\n    dfs(target) { // Appears to still be broken\n        let stack = [this];\n\n        while (stack.length > 0) {\n            for (let i = 0; i < stack.length; i++) {\n                let currentNode = stack.shift();\n\n                if (currentNode.value === target) {\n                    this.visitedTiles.push(currentNode.position)\n                    this.findShortestPath();\n                    this.visualize(this.visitedTiles, this.grid);\n                    return currentNode;\n\n                } else if (currentNode.value !== \"root\") {\n                    this.visitedTiles.push(currentNode.position)\n                }\n\n                stack.unshift(...currentNode.children)\n            }\n\n        }\n\n\n    }\n\n    buildTree() {\n        const increments = [\n            [-1, 0], // Up\n            [0, 1], // Right\n            [1, 0], // Down\n            [0, -1] // Left\n\n            // [1, 0], // Down\n            // [0, -1], // Left\n            // [-1, 0], // Up\n            // [0, 1] // Right\n\n            // [0, 1] // Why does this one break everything?\n            // [1, 0],\n            // [-1, 0],\n            // [0, -1]\n        ];\n\n        // buildTree function will use the node on which it is called as the root node of the tree\n        let neighbors = [this]; // This is a queue\n\n        while (neighbors.length > 0) {\n            let currentNode = neighbors.shift();\n\n            for (let i = 0; i < increments.length; i++) {\n                let inc = increments[i];\n                let newPos = [currentNode.position[0] + inc[0], currentNode.position[1] + inc[1]];\n\n                if (currentNode.board.validPos(newPos)) {\n\n                    if (this.visited.has(newPos.join(\"-\"))) { // Call join on newPos to convert it to a valid keyname\n                        continue;\n                    }\n\n                    this.visited.add(newPos.join(\"-\"));\n\n                    let neighborNode = this.grid[newPos[0]][newPos[1]].node;\n                    neighborNode.addParent(currentNode)\n                    neighbors.push(neighborNode);\n                }\n            }\n\n            // increments.forEach(inc => {\n            //     let newPos = [currentNode.position[0] + inc[0], currentNode.position[1] + inc[1]];\n\n            //     // If the position is valid:\n            //     if (newPos[0] >= 0 && newPos[0] < 25 && newPos[1] >= 0 && newPos[1] < 48) {\n            //     // if (this.board.validPos(newPos)) { // MAKE THIS.BOARD A THING               d\n\n            //         if (this.visited.has(newPos.join(\"-\"))) {\n            //             return\n            //         }\n    \n            //         this.visited.add(newPos.join(\"-\"));\n\n            //         let neighborTile = this.grid[newPos[0]][newPos[1]];\n            //         neighbors.push(neighborTile.node);\n            //         neighborTile.node.addParent(currentNode);\n\n            //         // If the neighbor exists, has no parent, and is not already a child of the current node:\n            //         // if (neighborTile.node.parent === null && !currentNode.children.includes(neighborTile.node)) {\n            //         //     neighbors.push(neighborTile.node);\n            //         //     neighborTile.node.addParent(currentNode);\n            //         // }\n            //     }\n            // })\n\n        }\n\n    }\n\n    findShortestPath() {\n        let targetNodePos = this.visitedTiles[this.visitedTiles.length - 1]; \n        let currentNode = this.grid[targetNodePos[0]][targetNodePos[1]].node; // Very ugly way to get target node\n\n        this.shortestPath.unshift(currentNode.position);\n        debugger\n        while (currentNode.value !== \"root\" && currentNode.parent.value !== \"root\") {\n            this.shortestPath.unshift(currentNode.parent.position)\n            currentNode = currentNode.parent;\n        }\n\n    }\n\n    addParent(parentNode) {\n        if (this.parent !== null) { // Check to see if current node already has a parent\n            // debugger\n            this.parent.removeChild(this) // Remove itself from old parent's children\n        }\n\n        if (parentNode !== null) {\n            this.parent = parentNode;\n            parentNode.children.push(this);\n        }\n    }\n\n    placeWall() {\n        if (this.value !== \"root\" && this.value !== \"target\") {\n            // debugger\n            this.value = \"wall\";\n            this.tileObj.classList.add(\"wall\")\n            this.tileObj.removeEventListener(\"click\", this.placeWall)\n            this.tileObj.addEventListener(\"click\", this.removeWall)\n            console.log(\"Wall placed\")\n        }\n    }\n\n    removeWall() {\n        if (this.value === \"wall\") {\n            this.value = null;\n            this.tileObj.classList.remove(\"wall\")\n            this.tileObj.removeEventListener(\"click\", this.removeWall)\n            this.tileObj.addEventListener(\"click\", this.placeWall);\n            console.log(\"Wall removed\")\n        }\n    }\n\n}","import Tile from \"./tile\";\n\nexport default class Board { \n    constructor() {\n        this.grid = [];\n        this.rootNode;\n        this.targetNode;\n\n        this.lastNodeType;\n\n        this.validPos = this.validPos.bind(this);\n        this.setRoot = this.setRoot.bind(this);\n        this.setTarget = this.setTarget.bind(this);\n    }\n\n    fillGrid() { // Create tile objects, populate this.grid\n        for (let i = 0; i < 25; i++) { // Board is 25 x 48, 1200 total tiles\n            let row = [];\n\n            for (let j = 0; j < 48; j++) {\n                if (i === 12 && j === 9) {\n                    let rootNode = new Tile(\"root\", [i, j], this, true)\n                    rootNode.tile.classList.add(\"root-node\")\n                    rootNode.tile.setAttribute(\"draggable\", \"true\")\n                    this.rootNode = rootNode.node;\n                    row.push(rootNode)\n\n                } else if (i === 12 && j === 38) {\n                    let targetNode = new Tile(\"target\", [i, j], this, true)\n                    targetNode.tile.classList.add(\"target-node\")\n                    targetNode.tile.setAttribute(\"draggable\", \"true\")\n                    this.targetNode = targetNode.node;\n                    row.push(targetNode)\n\n                } else {\n                    let newTile = new Tile(null, [i, j], this, true);\n                    row.push(newTile);\n                }\n            }\n\n            this.grid.push(row);\n        }\n    }\n\n    setRoot(pos) {\n        const oldX = this.rootNode.position[0];\n        const oldY = this.rootNode.position[1];\n        const x = pos[0];\n        const y = pos[1];\n\n        let oldRootTile = this.grid[oldX][oldY];\n        let oldNullTile = this.grid[x][y];\n\n        oldRootTile.node.value = null;\n        oldNullTile.node.value = \"root\";\n\n        oldRootTile.tile.classList.remove(\"root-node\");\n        oldNullTile.tile.classList.add(\"root-node\");\n\n        oldNullTile.tile.setAttribute(\"draggable\", \"true\")\n\n        oldRootTile.setDraggingFunctions();\n        oldNullTile.setDraggingFunctions();\n\n        this.rootNode = oldNullTile.node;\n    }\n\n    setTarget(pos) {\n        const oldX = this.targetNode.position[0];\n        const oldY = this.targetNode.position[1];\n        const x = pos[0];\n        const y = pos[1];\n\n        let oldTargetTile = this.grid[oldX][oldY];\n        let oldNullTile = this.grid[x][y];\n\n        oldTargetTile.node.value = null;\n        oldNullTile.node.value = \"target\";\n\n        oldTargetTile.tile.classList.remove(\"target-node\");\n        oldNullTile.tile.classList.add(\"target-node\");\n\n        oldNullTile.tile.setAttribute(\"draggable\", \"true\")\n\n        oldTargetTile.setDraggingFunctions();\n        oldNullTile.setDraggingFunctions();\n\n        this.targetNode = oldNullTile.node;\n    }\n\n    validPos(pos) {\n        return (pos[0] >= 0 && pos[0] < 25) && (pos[1] >= 0 && pos[1] < 48);\n    }\n}","import Board from \"./board\";\n\n// This is the Smartpath application's entry file\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    // Create and fill board\n    let board = new Board();\n    board.fillGrid();\n    console.log(\"Board initialized and populated\")\n\n    // Add functionality to radio buttons\n    function setAlgo(event) {\n        algorithm = event.target.id;\n    }\n\n    let algorithm = \"bfs-btn\"; // Default algorithm\n       \n    const dijkstrasButton = document.getElementById(\"dijkstras-btn\");\n    const astarButton = document.getElementById(\"astar-btn\");\n    const bfsButton = document.getElementById(\"bfs-btn\");\n    const dfsButton = document.getElementById(\"dfs-btn\");\n    \n    dijkstrasButton.addEventListener(\"click\", setAlgo);\n    astarButton.addEventListener(\"click\", setAlgo);\n    bfsButton.addEventListener(\"click\", setAlgo);\n    dfsButton.addEventListener(\"click\", setAlgo);\n\n\n    // Add functionality to Visualize button\n    function runAlgorithm() {\n        let rootNode = board.rootNode;\n\n        switch (algorithm) {\n            case \"bfs-btn\":\n                // rootnode = board.grid[12][9].node; // Temporarily remove reset functionality to account for walls\n                // reset();\n                rootNode.buildTree();\n                console.log(\"Node tree built\")\n\n                rootNode.bfs(\"target\");\n                console.log(\"BFS executed\");\n                break;\n            case \"dfs-btn\":\n                // rootnode = board.grid[12][9].node;\n                // reset();\n                rootNode.buildTree();\n                console.log(\"Node tree built\")\n\n                rootNode.dfs(\"target\");\n                console.log(\"DFS executed\");\n                break;\n            default:\n                break;\n        }\n    }\n\n    let visButton = document.getElementById(\"vis-button\");\n    visButton.addEventListener(\"click\", runAlgorithm);\n\n    // Add functionality to Clear button\n    function reset() {\n        let grid = document.getElementById(\"grid\");\n        grid.innerHTML = \"\";\n        \n        board.grid = [];\n        // board.lastNodeType = \"\";\n        console.log(\"Board cleared\")\n        board.fillGrid();\n    }\n\n    let resetButton = document.getElementById(\"reset-button\");\n    resetButton.addEventListener(\"click\", reset)\n})","import PolyTreeNode from \"./algorithms/polytreenode\";\n\nexport default class Tile {\n    constructor(nodeValue, position, board) {\n        this.position = position;\n        this.board = board;\n\n        this.tile = document.createElement(\"div\");\n        this.tile.classList.add(\"tile\");\n        this.tile.id = `${position[0]}-${position[1]}`;\n\n        let grid = document.getElementById(\"grid\");\n        grid.appendChild(this.tile);\n\n        this.node = new PolyTreeNode(nodeValue, position, board); // This MUST come after this.tile's id is set\n\n        this.setDraggingFunctions();\n    }\n\n    setDraggingFunctions() {\n        let board = this.board;\n\n        const handleDragStart = event => {\n            console.log(\"Drag start fired\")\n\n            let tileId = event.target.id.split(\"-\");\n            let dragStartPos = [+tileId[0], +tileId[1]];\n            board.lastNodeType = board.grid[dragStartPos[0]][dragStartPos[1]].node.value;\n        }\n\n        const handleDragEnter = event => {\n            console.log(\"Drag enter fired\")\n            event.preventDefault()\n        }\n\n        const handleDragOver = event => {\n            console.log(\"Drag over fired\")\n            event.preventDefault()\n        }\n\n        const handleDrop = event => {\n            console.log(\"Drop fired\")\n            event.preventDefault();\n\n            let tileId= event.target.id.split(\"-\");\n            let dragEndPos = [+tileId[0], +tileId[1]];\n\n            if (board.lastNodeType === \"root\") {\n                board.setRoot(dragEndPos)\n            } else if (board.lastNodeType === \"target\") {\n                board.setTarget(dragEndPos)\n            } else if (board.lastNodeType === null) {\n                // Logic for wall dragging here\n            }\n        }\n\n        if (this.node.value === \"root\" || this.node.value === \"target\") {\n            this.tile.addEventListener(\"dragstart\", handleDragStart)\n        } else {\n            this.tile.addEventListener(\"dragenter\", handleDragEnter)\n            this.tile.addEventListener(\"dragover\", handleDragOver)\n            this.tile.addEventListener(\"drop\", handleDrop)\n        }\n    }\n\n}"],"sourceRoot":""}