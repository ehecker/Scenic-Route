{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/algorithms/polytreenode.js","webpack:///./src/board.js","webpack:///./src/index.js","webpack:///./src/tile.js"],"names":["PolyTreeNode","value","position","board","grid","tileObj","document","getElementById","parent","children","visitedTiles","shortestPath","visited","Set","add","join","visualize","bind","visualizeShortestPath","classList","forEach","child","remove","speed","viz","length","setTimeout","currentPos","shift","tile","targetPos","pathPositions","console","log","target","queue","currentNode","push","findShortestPath","animationSpeed","stack","i","unshift","increments","neighbors","inc","newPos","validPos","node","has","neighborNode","addParent","targetNodePos","parentNode","removeChild","Board","rootNode","targetNode","lastNodeType","setRoot","setTarget","row","j","Tile","setAttribute","newTile","pos","oldX","oldY","x","y","oldRootTile","oldNullTile","setDraggingFunctions","oldTargetTile","addEventListener","fillGrid","setAlgo","event","oldActive","algorithm","id","newActive","infoTitleEl","innerHTML","infoTextEl","bfsText","dfsText","dijkstrasText","dijkstrasButton","bfsButton","dfsButton","runAlgorithm","buildTree","bfs","dfs","visButton","reset","resetButton","setAnimationSpeed","newSpeed","selectButton","nodeValue","createElement","appendChild","handleDragStart","tileId","split","dragStartPos","handleDragEnter","preventDefault","currentTile","removeWall","placeWall","handleDragOver","handleDrop","dragEndPos","handleClick"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default class PolyTreeNode {\n\n    constructor(value, position, board) {\n        this.value = value;\n        this.position = position;\n        this.board = board;\n        this.grid = board.grid;\n\n        this.tileObj = document.getElementById(`${position[0]}-${position[1]}`);\n\n        this.parent = null;\n        this.children = [];\n\n        this.visitedTiles = []; // Used for computing and animating algorithms\n        this.shortestPath = [];\n\n        this.visited = new Set(); // Used for building node tree\n        this.visited.add(this.position.join(\"-\"));\n\n        this.visualize = this.visualize.bind(this);\n        this.visualizeShortestPath = this.visualizeShortestPath.bind(this);\n\n        // Comment these in to toggle showing children on hover.\n        // this.showChildren = this.showChildren.bind(this);\n        // this.hideChildren = this.hideChildren.bind(this);\n        // this.tileObj.addEventListener(\"mouseenter\", this.showChildren)\n        // this.tileObj.addEventListener(\"mouseleave\", this.hideChildren)\n    }\n\n    showChildren() {\n        this.tileObj.classList.add(\"parent\")\n        this.children.forEach(child => {\n            child.tileObj.classList.add(\"child\")\n        })\n    }\n\n    hideChildren() {\n        this.tileObj.classList.remove(\"parent\")\n        this.children.forEach(child => {\n            child.tileObj.classList.remove(\"child\")\n        })\n    }\n\n    visualize(visitedTiles, grid, speed) {\n        let viz = this.visualize; // Saves function to a variable so that it can be accessed within setTimeout's callback\n\n        if (visitedTiles.length > 1) {\n            setTimeout(function() {\n                let currentPos = visitedTiles.shift()\n                grid[currentPos[0]][currentPos[1]].tile.classList.add(\"visited\");\n\n                viz(visitedTiles, grid, speed); // Calls itself recursively to ensure other code has finished before starting next step\n            }, speed)\n\n        } else if (visitedTiles.length === 1) {\n            let targetPos = visitedTiles[0];\n            grid[targetPos[0]][targetPos[1]].tile.classList.add(\"target-found\")\n            this.visualizeShortestPath(this.shortestPath, this.grid);\n        }\n\n    }\n\n    visualizeShortestPath(pathPositions, grid) {\n        let viz = this.visualizeShortestPath;\n\n        if (pathPositions.length > 1) {\n            setTimeout(function() {\n                let currentPos = pathPositions.shift();\n                grid[currentPos[0]][currentPos[1]].tile.classList.add(\"shortest-path-node\");\n\n                viz(pathPositions, grid)\n            }, 25)\n        } // Can I put an else if here to change board's currently running status? Else if .length === 0\n        console.log(\"Shortest path animated\")\n    }\n\n    bfs(target) {\n        let queue = [this];\n\n        while (queue.length > 0) {\n            let currentNode = queue.shift();\n            \n            if (currentNode.value !== \"root\" && currentNode.value !== \"target\") {\n                this.visitedTiles.push(currentNode.position)\n            }\n\n            if (currentNode.value === target) {\n                this.visitedTiles.push(currentNode.position)\n                this.findShortestPath();\n                this.visualize(this.visitedTiles, this.grid, this.board.animationSpeed);\n                return currentNode;\n            }\n            \n            queue.push(...currentNode.children);\n        }\n        console.log(\"Unsolvable grid detected\")\n        // Logic for handling unsolvable grid goes here\n    }\n\n    dfs(target) {\n        let stack = [this];\n\n        while (stack.length > 0) {\n            for (let i = 0; i < stack.length; i++) {\n                let currentNode = stack.shift();\n\n                if (currentNode.value === target) {\n                    this.visitedTiles.push(currentNode.position)\n                    this.findShortestPath();\n                    this.visualize(this.visitedTiles, this.grid, this.board.animationSpeed);\n                    return currentNode;\n\n                } else if (currentNode.value !== \"root\") {\n                    this.visitedTiles.push(currentNode.position)\n                }\n\n                stack.unshift(...currentNode.children)\n            }\n\n        }\n\n\n    }\n\n    buildTree() {\n        const increments = [\n            [0, 1],\n            [1, 0],\n            [-1, 0],\n            [0, -1]\n\n            // Original, up-first tree build\n            // [-1, 0], // Up\n            // [0, 1], // Right\n            // [1, 0], // Down\n            // [0, -1] // Left\n        ];\n\n        // buildTree function will use the node on which it is called as the root node of the tree\n        let neighbors = [this]; // This is a queue\n\n        while (neighbors.length > 0) {\n            let currentNode = neighbors.shift();\n\n            for (let i = 0; i < increments.length; i++) {\n                let inc = increments[i];\n                let newPos = [currentNode.position[0] + inc[0], currentNode.position[1] + inc[1]];\n\n                if (currentNode.board.validPos(newPos) && this.grid[newPos[0]][newPos[1]].node.value !== \"wall\") {\n\n                    if (this.visited.has(newPos.join(\"-\"))) { // Call join on newPos to convert it to a valid keyname\n                        continue;\n                    }\n\n                    this.visited.add(newPos.join(\"-\"));\n\n                    let neighborNode = this.grid[newPos[0]][newPos[1]].node;\n                    neighborNode.addParent(currentNode)\n                    neighbors.push(neighborNode);\n                }\n            }\n        }\n\n    }\n\n    findShortestPath() {\n        let targetNodePos = this.visitedTiles[this.visitedTiles.length - 1]; \n        let currentNode = this.grid[targetNodePos[0]][targetNodePos[1]].node; // Very ugly way to get target node\n\n        this.shortestPath.unshift(currentNode.position);\n\n        while (currentNode.value !== \"root\" && currentNode.parent.value !== \"root\") {\n            this.shortestPath.unshift(currentNode.parent.position)\n            currentNode = currentNode.parent;\n        }\n\n    }\n\n    addParent(parentNode) {\n        if (this.parent !== null) { // Check to see if current node already has a parent\n            this.parent.removeChild(this) // Remove itself from old parent's children\n        }\n\n        if (parentNode !== null) {\n            this.parent = parentNode;\n            parentNode.children.push(this);\n        }\n    }\n\n}","import Tile from \"./tile\";\n\nexport default class Board { \n    constructor() {\n        this.grid = [];\n        this.rootNode;\n        this.targetNode;\n\n        this.lastNodeType;\n        this.animationSpeed = 5;\n\n        this.validPos = this.validPos.bind(this);\n        this.setRoot = this.setRoot.bind(this);\n        this.setTarget = this.setTarget.bind(this);\n    }\n\n    fillGrid() { // Create tile objects, populate this.grid\n        for (let i = 0; i < 25; i++) { // Board is 25 x 48, 1200 total tiles\n            let row = [];\n\n            for (let j = 0; j < 48; j++) {\n                if (i === 12 && j === 9) {\n                    let rootNode = new Tile(\"root\", [i, j], this, true)\n                    rootNode.tile.classList.add(\"root-node\")\n                    rootNode.tile.setAttribute(\"draggable\", \"true\")\n                    this.rootNode = rootNode.node;\n                    row.push(rootNode)\n\n                } else if (i === 12 && j === 38) {\n                    let targetNode = new Tile(\"target\", [i, j], this, true)\n                    targetNode.tile.classList.add(\"target-node\")\n                    targetNode.tile.setAttribute(\"draggable\", \"true\")\n                    this.targetNode = targetNode.node;\n                    row.push(targetNode)\n\n                } else {\n                    let newTile = new Tile(null, [i, j], this, true);\n                    newTile.tile.setAttribute(\"draggable\", \"true\")\n                    row.push(newTile);\n                }\n            }\n\n            this.grid.push(row);\n        }\n    }\n\n    setRoot(pos) { // Change variables in this & setTarget to newRootTile/newNullTile\n        const oldX = this.rootNode.position[0];\n        const oldY = this.rootNode.position[1];\n        const x = pos[0];\n        const y = pos[1];\n\n        let oldRootTile = this.grid[oldX][oldY];\n        let oldNullTile = this.grid[x][y];\n\n        oldRootTile.node.value = null;\n        oldNullTile.node.value = \"root\";\n\n        oldRootTile.tile.classList.remove(\"root-node\");\n        oldNullTile.tile.classList.add(\"root-node\");\n\n        oldNullTile.tile.setAttribute(\"draggable\", \"true\")\n\n        oldRootTile.setDraggingFunctions();\n        oldNullTile.setDraggingFunctions();\n\n        this.rootNode = oldNullTile.node;\n    }\n\n    setTarget(pos) {\n        const oldX = this.targetNode.position[0];\n        const oldY = this.targetNode.position[1];\n        const x = pos[0];\n        const y = pos[1];\n\n        let oldTargetTile = this.grid[oldX][oldY];\n        let oldNullTile = this.grid[x][y];\n\n        oldTargetTile.node.value = null;\n        oldNullTile.node.value = \"target\";\n\n        oldTargetTile.tile.classList.remove(\"target-node\");\n        oldNullTile.tile.classList.add(\"target-node\");\n\n        oldNullTile.tile.setAttribute(\"draggable\", \"true\")\n\n        oldTargetTile.setDraggingFunctions();\n        oldNullTile.setDraggingFunctions();\n\n        this.targetNode = oldNullTile.node;\n    }\n\n    validPos(pos) {\n        return (pos[0] >= 0 && pos[0] < 25) && (pos[1] >= 0 && pos[1] < 48);\n    }\n}","import Board from \"./board\";\n\n// Smartpath Entry File:\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    // Create and fill board\n    let board = new Board();\n    board.fillGrid();\n    console.log(\"Board initialized and populated\")\n\n    // Add functionality to radio buttons\n    function setAlgo(event) {\n        let oldActive = document.getElementById(algorithm);\n        oldActive.classList.remove(\"active\");\n\n        algorithm = event.target.id;\n        let newActive = document.getElementById(algorithm);\n        newActive.classList.add(\"active\");\n\n        if (algorithm === \"bfs-btn\") {\n            infoTitleEl.innerHTML = \"Breadth First Search\";\n            infoTextEl.innerHTML = bfsText;\n        } else if (algorithm === \"dfs-btn\") {\n            infoTitleEl.innerHTML = \"Depth First Search\";\n            infoTextEl.innerHTML = dfsText;\n        } else if (algorithm === \"dijkstras-btn\") {\n            infoTitleEl.innerHTML = \"Dijkstra's Algorithm\"\n            infoTextEl.innerHTML = dijkstrasText;\n        }\n    }\n\n    \n    const bfsText = \"Breadth First Search (BFS) is a search algorithm used for navigating graph data structures. It utilizes a 'breadth-first' strategy, meaning that each node explores each of its neighbor nodes before moving onto the nodes at the next level of depth. It was invented in 1945 by Konrad Zuse.\"\n    const dfsText = \"Depth First Search (DFS) is a search algorithm which prioritizes exploration of nodes located 'deeper' in a graph structure. It was originally invented by French mathematician Charles Pierre Tremaux in the 19th century.\"\n    const dijkstrasText = \"Dijkstra's algorithm is a search algorithm which guarantees discovery of the shortest path between nodes. It is considered the most efficient search algorithm in existence. It was invented by Edsger W. Dijkstra in 1956.\"\n    \n    const infoTitleEl = document.getElementById(\"algo-title\")\n    const infoTextEl = document.getElementById(\"algo-info\");\n\n    infoTitleEl.innerHTML = \"Breadth First Search\"; // Set default title\n    infoTextEl.innerHTML = bfsText; // Set default text\n    let algorithm = \"bfs-btn\"; // Set default algorithm\n\n       \n    const dijkstrasButton = document.getElementById(\"dijkstras-btn\");\n    const bfsButton = document.getElementById(\"bfs-btn\");\n    const dfsButton = document.getElementById(\"dfs-btn\");\n    \n    dijkstrasButton.addEventListener(\"click\", setAlgo);\n    bfsButton.addEventListener(\"click\", setAlgo);\n    dfsButton.addEventListener(\"click\", setAlgo);\n\n\n    // Add functionality to Visualize button\n    function runAlgorithm() {\n        let rootNode = board.rootNode;\n\n        switch (algorithm) {\n            case \"bfs-btn\":\n                rootNode.buildTree();\n                console.log(\"Node tree built\")\n\n                rootNode.bfs(\"target\");\n                console.log(\"BFS executed\");\n                break;\n            case \"dfs-btn\":\n                rootNode.buildTree();\n                console.log(\"Node tree built\")\n\n                rootNode.dfs(\"target\");\n                console.log(\"DFS executed\");\n                break;\n            default:\n                break;\n        }\n    }\n\n    const visButton = document.getElementById(\"vis-button\");\n    visButton.addEventListener(\"click\", runAlgorithm);\n\n    // Add functionality to Reset button\n    function reset() {\n        let grid = document.getElementById(\"grid\");\n        grid.innerHTML = \"\";\n        \n        board.grid = [];\n        console.log(\"Board cleared\")\n        board.fillGrid();\n    }\n\n    const resetButton = document.getElementById(\"reset-button\");\n    resetButton.addEventListener(\"click\", reset)\n\n    // Add functionality to Animation Speed dropdown\n    function setAnimationSpeed(event) {\n        let newSpeed;\n\n        switch (event.target.value) {\n            case \"lightning\":\n                newSpeed = 5;\n                break;\n            case \"veryfast\":\n                newSpeed = 15;\n                break;\n            case \"medium\":\n                newSpeed = 30;\n                break;\n            case \"slowmotion\":\n                newSpeed = 75;\n                break;\n            default:\n                break;\n        }\n\n        board.animationSpeed = newSpeed;\n    }\n\n    const selectButton = document.getElementById(\"anim-speed\");\n    selectButton.addEventListener(\"change\", setAnimationSpeed)\n})","import PolyTreeNode from \"./algorithms/polytreenode\";\n\nexport default class Tile {\n    constructor(nodeValue, position, board) {\n        this.position = position;\n        this.board = board;\n\n        this.tile = document.createElement(\"div\");\n        this.tile.classList.add(\"tile\");\n        this.tile.id = `${position[0]}-${position[1]}`;\n\n        let grid = document.getElementById(\"grid\");\n        grid.appendChild(this.tile);\n\n        this.node = new PolyTreeNode(nodeValue, position, board); // This MUST come after this.tile's id is set\n\n        this.setDraggingFunctions();\n    }\n\n    setDraggingFunctions() {\n        let board = this.board;\n\n        const handleDragStart = event => {\n            console.log(\"Drag start fired\")\n\n            let tileId = event.target.id.split(\"-\");\n            let dragStartPos = [+tileId[0], +tileId[1]];\n            board.lastNodeType = board.grid[dragStartPos[0]][dragStartPos[1]].node.value;\n        }\n\n        const handleDragEnter = event => {\n            console.log(\"Drag enter fired\")\n            event.preventDefault()\n\n            let tileId = event.target.id.split(\"-\");\n            let currentTile = board.grid[+tileId[0]][+tileId[1]]\n\n            if (board.lastNodeType === \"wall\" || board.lastNodeType === null) {\n                if (currentTile.node.value === \"wall\") {\n                    currentTile.removeWall()\n                } else if (currentTile.node.value === null) {\n                    currentTile.placeWall()\n                }\n            }\n        }\n\n        const handleDragOver = event => { // DO NOT REMOVE. Root/target node repositioning does not work without this.\n            console.log(\"Drag over fired\")\n            event.preventDefault()\n        }\n\n        const handleDrop = event => {\n            console.log(\"Drop fired\")\n            event.preventDefault();\n\n            let tileId = event.target.id.split(\"-\");\n            let dragEndPos = [+tileId[0], +tileId[1]];\n\n            if (board.lastNodeType === \"root\") {\n                board.setRoot(dragEndPos)\n            } else if (board.lastNodeType === \"target\") {\n                board.setTarget(dragEndPos)\n            }\n        }\n\n        const handleClick = event => {\n            console.log(\"Click fired\")\n            event.preventDefault()\n\n            let tileId = event.target.id.split(\"-\");\n            let currentTile = board.grid[+tileId[0]][+tileId[1]]\n\n            if (currentTile.node.value === \"wall\") {\n                currentTile.removeWall()\n            } else if (currentTile.node.value === null) {\n                currentTile.placeWall()\n            }\n        }\n\n        // All tiles listen for dragstart\n        this.tile.addEventListener(\"dragstart\", handleDragStart)\n\n        // Only walls and nulls receive other listeners\n        if (this.node.value === \"wall\" || this.node.value === null) {\n            this.tile.addEventListener(\"dragenter\", handleDragEnter)\n            this.tile.addEventListener(\"dragover\", handleDragOver)\n            this.tile.addEventListener(\"drop\", handleDrop)\n            this.tile.addEventListener(\"click\", handleClick)\n        }\n    }\n\n    placeWall() {\n        this.node.value = \"wall\";\n        this.tile.classList.add(\"wall\")\n        console.log(\"Wall placed\")\n    }\n\n    removeWall() {\n        this.node.value = null;\n        this.tile.classList.remove(\"wall\")\n        console.log(\"Wall removed\")\n    }\n\n}"],"sourceRoot":""}